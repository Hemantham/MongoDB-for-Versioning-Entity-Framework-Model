//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//
//	  If extending the class is desired, create a seperate file and implement the 
//    extended class as a partial class
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using BIG4.Framework.Business.MVC;
using BIG4.Framework.Entities;
using BIG4.Framework.Data;
using BIG4.Framework.Entities.Models;

namespace BIG4.Framework.Business.Services
{
	public partial interface IAccommodationService
	{
        
		IEnumerable<Accommodation> GetAll();
		IEnumerable<Accommodation> GetAllPublic();

        //Accommodation GetForEdit(int accommodationID);

		void Delete(Accommodation objAccommodation);
  	}
	
	public partial class AccommodationService : IAccommodationService
	{
		private IBIG4Context _context;


	    public AccommodationService()
	    {
            uow = new UnitOfWork();
	        if (BusinessContext.IsParentInPreview<Accommodation>())
	        {
                _context = new BIG4MongoContext(BusinessContext.GetPreviewVersion(),true);
	        }
	        else
	        {
                _context = new BIG4Context();
	            
	        }

	    }








	    public IEnumerable<Accommodation> GetAll()
		{
            return _context.Accommodations.Include("AccommodationImages")
                                          .Include("AccommodationLists")
                                          .AsEnumerable();
		}
		
		public IEnumerable<Accommodation> GetAllPublic()
		{
			return _context.Accommodations.Where(e => e.IsOnline && !e.IsDeleted).AsEnumerable();
		}
			
		

        //public  Accommodation GetForEdit(int accommodationID)
        //{
        //    return  uow.GetRepository<Accommodation>().GetByID(accommodationID);
        //}
		
		

		public void Delete(Accommodation objAccommodation)
		{
			objAccommodation.DateModified = DateTime.Now;
			objAccommodation.IsDeleted = true;
			_context.Update(objAccommodation);
			_context.SaveChanges();
		}
	}
}
