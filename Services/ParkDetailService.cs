//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//
//	  If extending the class is desired, create a seperate file and implement the 
//    extended class as a partial class
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using BIG4.Framework.Entities;
using BIG4.Framework.Data;

namespace BIG4.Framework.Business.Services
{
	public partial interface IParkDetailService
	{
		ParkDetail GetByParkID(int parkID);
		IEnumerable<ParkDetail> GetAll();
		IEnumerable<ParkDetail> GetAllPublic();
		//void Add(ParkDetail objParkDetail);
		//void Update(ParkDetail objParkDetail);
     
		void Delete(ParkDetail objParkDetail);
  	}
	
	public partial class ParkDetailService : IParkDetailService
	{
		private IBIG4Context _context;
		
		public ParkDetailService()
		{
            uow = new UnitOfWork();
			_context = new BIG4Context();
		}
		
		public ParkDetailService(IBIG4Context context)
		{
			_context = context;
		}
		
		public ParkDetail GetByParkID(int parkID)
		{
			return _context.ParkDetails.Find(parkID);
		}
		
		public IEnumerable<ParkDetail> GetAll()
		{
			return _context.ParkDetails.AsEnumerable();
		}
		
		public IEnumerable<ParkDetail> GetAllPublic()
		{
			return _context.ParkDetails.Where(e => e.IsOnline && !e.IsDeleted).AsEnumerable();
		}
			
		public void Add(ParkDetail objParkDetail)
		{
			objParkDetail.DateCreated = DateTime.Now;
			objParkDetail.DateModified = DateTime.Now;
			_context.ParkDetails.Add(objParkDetail);
			_context.SaveChanges();
		}
		
		public void Update(ParkDetail objParkDetail)
		{
			objParkDetail.DateModified = DateTime.Now;
			_context.Update(objParkDetail);
			_context.SaveChanges();
		}

		public void Delete(ParkDetail objParkDetail)
		{
			objParkDetail.DateModified = DateTime.Now;
			objParkDetail.IsDeleted = true;
			_context.Update(objParkDetail);
			_context.SaveChanges();
		}
	}
}
